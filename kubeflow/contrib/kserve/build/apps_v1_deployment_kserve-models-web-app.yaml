apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    internal.kpt.dev/upstream-identifier: apps|Deployment|kserve|kserve-models-web-app
  labels:
    app: kserve
    app.kubernetes.io/component: kserve-models-web-app
    app.kubernetes.io/name: kserve
    kustomize.component: kserve-models-web-app
  name: kserve-models-web-app
  namespace: kubeflow
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kserve
      app.kubernetes.io/component: kserve-models-web-app
      app.kubernetes.io/name: kserve
      kustomize.component: kserve-models-web-app
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: kserve
        app.kubernetes.io/component: kserve-models-web-app
        app.kubernetes.io/name: kserve
        kustomize.component: kserve-models-web-app
    spec:
      containers:
      - env:
        - name: USERID_HEADER
          valueFrom:
            configMapKeyRef:
              key: userid-header
              name: kubeflow-config
        - name: USERID_PREFIX
          valueFrom:
            configMapKeyRef:
              key: userid-prefix
              name: kubeflow-config
        envFrom:
        - configMapRef:
            name: kserve-models-web-app-config
        image: kserve/models-web-app:v0.10.0
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz/liveness
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: kserve-models-web-app
        ports:
        - containerPort: 5000
          name: http
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz/readiness
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
      serviceAccountName: kserve-models-web-app
